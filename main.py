from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes, MessageHandler, filters
import geopy.distance
from geopy.geocoders import Nominatim
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

BOT_TOKEN = '7767809773:AAHMELMnWt61ZtMRKQhl-_fPybZsrMDsfFg'

# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_context = {}

# –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
faq_questions = {
    "q1": {"ru": "üïí –û–±—â–∏–π —Å—Ä–æ–∫ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏", "kz": "üïí –ñ–∞–ª–ø—ã —ñ—Å –¥–∞–≤–Ω–æ—Å—Ç—å –º–µ—Ä–∑—ñ–º—ñ"},
    "q2": {"ru": "üìÖ –°—Ä–æ–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏—Ö –¥–µ–ª", "kz": "üìÖ –ê–∑–∞–º–∞—Ç—Ç—ã“õ —ñ—Å—Ç–µ—Ä–¥—ñ “õ–∞—Ä–∞—É –º–µ—Ä–∑—ñ–º—ñ"},
    "q3": {"ru": "‚è≥ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏", "kz": "‚è≥ –Ü—Å –¥–∞–≤–Ω–æ—Å—Ç—å—ñ–Ω—ñ“£ –∞—Ä–Ω–∞–π—ã –º–µ—Ä–∑—ñ–º–¥–µ—Ä—ñ"},
    "q4": {"ru": "‚öñÔ∏è –°—Ä–æ–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –æ—Å–æ–±—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–µ–ª", "kz": "‚öñÔ∏è –ê—Ä–Ω–∞–π—ã —Å–∞–Ω–∞—Ç—Ç–∞“ì—ã —ñ—Å—Ç–µ—Ä–¥—ñ “õ–∞—Ä–∞—É –º–µ—Ä–∑—ñ–º–¥–µ—Ä—ñ"},
    "q5": {"ru": "üìÜ –ò—Å—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω—ã—Ö —Å—Ä–æ–∫–æ–≤", "kz": "üìÜ –ü—Ä–æ—Ü–µ—Å—Ç—ñ–∫ –º–µ—Ä–∑—ñ–º–¥–µ—Ä–¥—ñ –µ—Å–µ–ø—Ç–µ—É"},
    "q6": {"ru": "üì® –°—Ä–æ–∫–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—É–¥–µ–±–Ω—ã—Ö –∞–∫—Ç–æ–≤", "kz": "üì® –°–æ—Ç –∞–∫—Ç—ñ–ª–µ—Ä—ñ–Ω –∂—ñ–±–µ—Ä—É –º–µ—Ä–∑—ñ–º–¥–µ—Ä—ñ"},
    "q7": {"ru": "üìù –°—Ä–æ–∫–∏ –ø–æ–¥–∞—á–∏ –∞–ø–µ–ª–ª—è—Ü–∏–æ–Ω–Ω–æ–π –∏ –∫–∞—Å—Å–∞—Ü–∏–æ–Ω–Ω–æ–π –∂–∞–ª–æ–±—ã", "kz": "üìù –ê–ø–µ–ª–ª—è—Ü–∏—è–ª—ã“õ –∂”ô–Ω–µ –∫–∞—Å—Å–∞—Ü–∏—è–ª—ã“õ —à–∞“ì—ã–º–¥–∞—Ä–¥—ã –±–µ—Ä—É –º–µ—Ä–∑—ñ–º–¥–µ—Ä—ñ"},
    "q8": {"ru": "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Å—Ä–æ–∫–æ–≤", "kz": "üîÑ ”®—Ç–∫—ñ–∑—ñ–ø –∂—ñ–±–µ—Ä—ñ–ª–≥–µ–Ω –º–µ—Ä–∑—ñ–º–¥–µ—Ä–¥—ñ “õ–∞–ª–ø—ã–Ω–∞ –∫–µ–ª—Ç—ñ—Ä—É"},
    "q9": {"ru": "‚ö° –°—Ä–æ–∫–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Å—É–¥–µ–±–Ω—ã—Ö –∞–∫—Ç–æ–≤", "kz": "‚ö° –°–æ—Ç –∞–∫—Ç—ñ–ª–µ—Ä—ñ–Ω –æ—Ä—ã–Ω–¥–∞—É –º–µ—Ä–∑—ñ–º–¥–µ—Ä—ñ"},
    "q10": {"ru": "üÜï –ü–µ—Ä–µ—Å–º–æ—Ç—Ä –ø–æ –Ω–æ–≤—ã–º –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞–º", "kz": "üÜï –ñ–∞“£–∞ –Ω–µ–º–µ—Å–µ “õ–∞–π—Ç–∞ –∞—à—ã–ª–∞–Ω –∂–∞“ì–¥–∞–π–ª–∞—Ä –±–æ–π—ã–Ω—à–∞ “õ–∞–π—Ç–∞ “õ–∞—Ä–∞—É"},
    "q11": {"ru": "üìã –°—Ä–æ–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è —Ö–æ–¥–∞—Ç–∞–π—Å—Ç–≤", "kz": "üìã ”®—Ç—ñ–Ω—ñ—à—Ç–µ—Ä–¥—ñ “õ–∞—Ä–∞—É –º–µ—Ä–∑—ñ–º–¥–µ—Ä—ñ"},
    "q12": {"ru": "üìú –°—Ä–æ–∫ –Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞ —Å—É–¥–µ–±–Ω—ã–º –ø—Ä–∏–∫–∞–∑–æ–º", "kz": "üìú –°–æ—Ç –±“±–π—Ä—ã“ì—ã–Ω–∞ –∂“Ø–≥—ñ–Ω—É –º–µ—Ä–∑—ñ–º—ñ"}
}

faq_answers = {
    "q1": {
        "ru": "–û–±—â–∏–π —Å—Ä–æ–∫ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 3 –≥–æ–¥–∞ —Å –º–æ–º–µ–Ω—Ç–∞, –∫–æ–≥–¥–∞ –ª–∏—Ü–æ —É–∑–Ω–∞–ª–æ –∏–ª–∏ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ —É–∑–Ω–∞—Ç—å –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ —Å–≤–æ–µ–≥–æ –ø—Ä–∞–≤–∞.",
        "kz": "–ñ–∞–ª–ø—ã —ñ—Å –¥–∞–≤–Ω–æ—Å—Ç—å—ñ –º–µ—Ä–∑—ñ–º—ñ –∞–¥–∞–º ”©–∑ “õ“±“õ—ã“ì—ã–Ω—ã“£ –±“±–∑—ã–ª“ì–∞–Ω—ã–Ω –±—ñ–ª–≥–µ–Ω –Ω–µ–º–µ—Å–µ –±—ñ–ª—É—ñ –∫–µ—Ä–µ–∫ –±–æ–ª“ì–∞–Ω –∫“Ø–Ω–Ω–µ–Ω –±–∞—Å—Ç–∞–ø 3 –∂—ã–ª–¥—ã “õ“±—Ä–∞–π–¥—ã."
    },
    "q2": {
        "ru": "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–µ –¥–µ–ª–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è —Å—É–¥–æ–º –≤ —Å—Ä–æ–∫ –¥–æ –¥–≤—É—Ö –º–µ—Å—è—Ü–µ–≤ —Å–æ –¥–Ω—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–µ–ª–∞ –∫ —Å—É–¥–µ–±–Ω–æ–º—É —Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—å—Å—Ç–≤—É.",
        "kz": "–ê–∑–∞–º–∞—Ç—Ç—ã“õ —ñ—Å—Ç–µ—Ä —Å–æ—Ç—Ç–∞ —ñ—Å—Ç—ñ —Å–æ—Ç –æ—Ç—ã—Ä—ã—Å—ã–Ω–∞ –¥–∞–π—ã–Ω–¥–∞—É–¥—ã –∞—è“õ—Ç–∞“ì–∞–Ω –∫“Ø–Ω–Ω–µ–Ω –±–∞—Å—Ç–∞–ø –µ–∫—ñ –∞–π“ì–∞ –¥–µ–π—ñ–Ω “õ–∞—Ä–∞–ª–∞–¥—ã."
    },
    "q3": {
        "ru": "–î–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–µ–ª –∑–∞–∫–æ–Ω–æ–º –º–æ–≥—É—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–Ω—ã–µ —Å—Ä–æ–∫–∏ –∏—Å–∫–æ–≤–æ–π –¥–∞–≤–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1 –≥–æ–¥ –ø–æ —Å–ø–æ—Ä–∞–º –æ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–±–æ—Ç).",
        "kz": "–Ü—Å—Ç—ñ“£ –∂–µ–∫–µ–ª–µ–≥–µ–Ω —Å–∞–Ω–∞—Ç—Ç–∞—Ä—ã “Ø—à—ñ–Ω –∑–∞“£–º–µ–Ω —ñ—Å –¥–∞–≤–Ω–æ—Å—Ç—å—ñ–Ω—ñ“£ –±–∞—Å“õ–∞ –º–µ—Ä–∑—ñ–º–¥–µ—Ä—ñ –±–µ–ª–≥—ñ–ª–µ–Ω—É—ñ –º“Ø–º–∫—ñ–Ω (–º—ã—Å–∞–ª—ã, –∂“±–º—ã—Å —Å–∞–ø–∞—Å—ã —Ç—É—Ä–∞–ª—ã –¥–∞—É–ª–∞—Ä –±–æ–π—ã–Ω—à–∞ 1 –∂—ã–ª)."
    },
    "q4": {
        "ru": "‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç—Ü–æ–≤—Å—Ç–≤–∞, –≤–∑—ã—Å–∫–∞–Ω–∏–µ –∞–ª–∏–º–µ–Ω—Ç–æ–≤ - –¥–æ 1 –º–µ—Å—è—Ü–∞\n‚Ä¢ –ü—Ä–∏–∑–Ω–∞–Ω–∏–µ –∑–∞–±–∞—Å—Ç–æ–≤–æ–∫ –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã–º–∏ - 10 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π\n‚Ä¢ –ò–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏ –ø–æ –∑–∞–∫–æ–Ω—É",
        "kz": "‚Ä¢ –ñ“±–º—ã—Å“õ–∞ “õ–∞–ª–ø—ã–Ω–∞ –∫–µ–ª—Ç—ñ—Ä—É, –∞—Ç–∞-–∞–Ω–∞–ª—ã“õ—Ç—ã –∞–Ω—ã“õ—Ç–∞—É, –∞–ª–∏–º–µ–Ω—Ç –∞–ª—É - 1 –∞–π“ì–∞ –¥–µ–π—ñ–Ω\n‚Ä¢ –ï—Ä–µ—É—ñ–ª–¥–µ—Ä–¥—ñ –∑–∞“£—Å—ã–∑ –¥–µ–ø —Ç–∞–Ω—É - 10 –∂“±–º—ã—Å –∫“Ø–Ω—ñ\n‚Ä¢ –ë–∞—Å“õ–∞ —Å–∞–Ω–∞—Ç—Ç–∞—Ä - –∑–∞“£–¥–∞ –±–µ–ª–≥—ñ–ª–µ–Ω–≥–µ–Ω –∞—Ä–Ω–∞–π—ã –º–µ—Ä–∑—ñ–º–¥–µ—Ä"
    },
    "q5": {
        "ru": "‚Ä¢ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –ø–æ—Å–ª–µ –¥–∞—Ç—ã/—Å–æ–±—ã—Ç–∏—è\n‚Ä¢ –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å - –≤—ã—Ö–æ–¥–Ω–æ–π, —Å—Ä–æ–∫ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—Å—è\n‚Ä¢ –ú–µ—Å—è—á–Ω—ã–µ/–≥–æ–¥–æ–≤—ã–µ —Å—Ä–æ–∫–∏ –æ–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —á–∏—Å–ª–æ",
        "kz": "‚Ä¢ –ö“Ø–Ω/–æ“õ–∏“ì–∞–¥–∞–Ω –∫–µ–π—ñ–Ω–≥—ñ –∫“Ø–Ω–Ω–µ–Ω –±–∞—Å—Ç–∞–ª–∞–¥—ã\n‚Ä¢ –°–æ“£“ì—ã –∫“Ø–Ω –¥–µ–º–∞–ª—ã—Å –∫“Ø–Ω—ñ –±–æ–ª—Å–∞, –º–µ—Ä–∑—ñ–º –∫–µ–π—ñ–Ω–≥–µ “õ–∞–ª–¥—ã—Ä—ã–ª–∞–¥—ã\n‚Ä¢ –ê–π–ª—ã“õ/–∂—ã–ª–¥—ã“õ –º–µ—Ä–∑—ñ–º–¥–µ—Ä —Å”ô–π–∫–µ—Å –∫“Ø–Ω–¥–µ –∞—è“õ—Ç–∞–ª–∞–¥—ã"
    },
    "q6": {
        "ru": "–ö–æ–ø–∏–∏ —Ä–µ—à–µ–Ω–∏–π –≤—ã—Å—ã–ª–∞—é—Ç—Å—è –Ω–µ –ø–æ–∑–¥–Ω–µ–µ 5 –¥–Ω–µ–π —Å–æ –¥–Ω—è –≤—ã–Ω–µ—Å–µ–Ω–∏—è —Ä–µ—à–µ–Ω–∏—è –≤ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–π —Ñ–æ—Ä–º–µ.",
        "kz": "–®–µ—à—ñ–º–Ω—ñ“£ –∫”©—à—ñ—Ä–º–µ–ª–µ—Ä—ñ —à–µ—à—ñ–º “õ–∞–±—ã–ª–¥–∞–Ω“ì–∞–Ω –∫“Ø–Ω–Ω–µ–Ω –±–∞—Å—Ç–∞–ø 5 –∫“Ø–Ω —ñ—à—ñ–Ω–¥–µ –∂—ñ–±–µ—Ä—ñ–ª–µ–¥—ñ."
    },
    "q7": {
        "ru": "‚Ä¢ –ê–ø–µ–ª–ª—è—Ü–∏—è - 1 –º–µ—Å—è—Ü —Å–æ –¥–Ω—è –≤—ã–Ω–µ—Å–µ–Ω–∏—è —Ä–µ—à–µ–Ω–∏—è\n‚Ä¢ –ö–∞—Å—Å–∞—Ü–∏—è - 6 –º–µ—Å—è—Ü–µ–≤ —Å–æ –¥–Ω—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –∞–∫—Ç–∞ –≤ —Å–∏–ª—É",
        "kz": "‚Ä¢ –ê–ø–µ–ª–ª—è—Ü–∏—è - —à–µ—à—ñ–º —à—ã“ì–∞—Ä—ã–ª“ì–∞–Ω –∫“Ø–Ω–Ω–µ–Ω –±–∞—Å—Ç–∞–ø 1 –∞–π\n‚Ä¢ –ö–∞—Å—Å–∞—Ü–∏—è - –∞–∫—Ç –∫“Ø—à—ñ–Ω–µ –µ–Ω–≥–µ–Ω –∫“Ø–Ω–Ω–µ–Ω –±–∞—Å—Ç–∞–ø 6 –∞–π"
    },
    "q8": {
        "ru": "–°—É–¥ –º–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ä–æ–∫ –ø—Ä–∏ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω–∞—Ö –ø—Ä–æ–ø—É—Å–∫–∞. –ó–∞—è–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –Ω–∞ –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏–µ.",
        "kz": "–°–æ—Ç –º–µ—Ä–∑—ñ–º–¥—ñ ”©—Ç–∫—ñ–∑—ñ–ø –∂—ñ–±–µ—Ä—É–≥–µ –Ω–µ–≥—ñ–∑–¥—ñ —Å–µ–±–µ–ø—Ç–µ—Ä –±–æ–ª“ì–∞–Ω –∂–∞“ì–¥–∞–π–¥–∞ “õ–∞–ª–ø—ã–Ω–∞ –∫–µ–ª—Ç—ñ—Ä–µ –∞–ª–∞–¥—ã. ”®—Ç—ñ–Ω—ñ—à —à–∞“ì—ã–º –±–µ—Ä—É –º–µ—Ä–∑—ñ–º—ñ –∞—è“õ—Ç–∞–ª“ì–∞–Ω“ì–∞ –¥–µ–π—ñ–Ω “õ–∞—Ä–∞–ª–∞–¥—ã."
    },
    "q9": {
        "ru": "‚Ä¢ –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ - –µ—Å–ª–∏ –ø–æ–¥–ª–µ–∂–∏—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—é\n‚Ä¢ –û–±—ã—á–Ω–æ - –ø–æ—Å–ª–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∑–∞–∫–æ–Ω–Ω—É—é —Å–∏–ª—É (–ø–æ—Å–ª–µ —Å—Ä–æ–∫–∞ –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏—è)",
        "kz": "‚Ä¢ –ë—ñ—Ä–¥–µ–Ω - –µ–≥–µ—Ä –¥–µ—Ä–µ—É –æ—Ä—ã–Ω–¥–∞—É“ì–∞ –∂–∞—Ç–∞–¥—ã\n‚Ä¢ ”ò–¥–µ—Ç—Ç–µ - –∑–∞“£–¥—ã –∫“Ø—à—ñ–Ω–µ –µ–Ω–≥–µ–Ω–Ω–µ–Ω –∫–µ–π—ñ–Ω (—à–∞“ì—ã–º –±–µ—Ä—É –º–µ—Ä–∑—ñ–º—ñ –∞—è“õ—Ç–∞–ª“ì–∞–Ω–Ω–∞–Ω –∫–µ–π—ñ–Ω)"
    },
    "q10": {
        "ru": "–ó–∞—è–≤–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–¥–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–µ—Å—è—Ü–µ–≤ —Å–æ –¥–Ω—è, –∫–æ–≥–¥–∞ –ª–∏—Ü–æ —É–∑–Ω–∞–ª–æ –æ –Ω–æ–≤—ã—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞—Ö.",
        "kz": "”®—Ç—ñ–Ω—ñ—à –∂–∞“£–∞ –∂–∞“ì–¥–∞–π–ª–∞—Ä —Ç—É—Ä–∞–ª—ã –±—ñ–ª–≥–µ–Ω –∫“Ø–Ω–Ω–µ–Ω –±–∞—Å—Ç–∞–ø 3 –∞–π —ñ—à—ñ–Ω–¥–µ –±–µ—Ä—ñ–ª—É—ñ –º“Ø–º–∫—ñ–Ω."
    },
    "q11": {
        "ru": "‚Ä¢ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ - –Ω–µ–∑–∞–º–µ–¥–ª–∏—Ç–µ–ª—å–Ω–æ\n‚Ä¢ –û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∏—Å–∫–∞ - –≤ –¥–µ–Ω—å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è",
        "kz": "‚Ä¢ ”®–Ω–¥—ñ—Ä—ñ—Å—Ç—ñ —Ç–æ“õ—Ç–∞—Ç—É - –¥–µ—Ä–µ—É\n‚Ä¢ –¢–∞–ª–∞–ø—Ç—ã “õ–∞–º—Ç–∞–º–∞—Å—ã–∑ –µ—Ç—É - —Ç“Ø—Å–∫–µ–Ω –∫“Ø–Ω—ñ"
    },
    "q12": {
        "ru": "–°—Ä–æ–∫ –Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞ —Å—É–¥–µ–±–Ω—ã–º –ø—Ä–∏–∫–∞–∑–æ–º —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 3 –≥–æ–¥–∞ —Å –º–æ–º–µ–Ω—Ç–∞, –∫–æ–≥–¥–∞ –≤–∑—ã—Å–∫–∞—Ç–µ–ª—å —É–∑–Ω–∞–ª –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –ø—Ä–∞–≤–∞.",
        "kz": "–°–æ—Ç –±“±–π—Ä—ã“ì—ã–Ω–∞ –∂“Ø–≥—ñ–Ω—É –º–µ—Ä–∑—ñ–º—ñ —Ç–∞–ª–∞–ø–∫–µ—Ä “õ“±“õ—ã“õ –±“±–∑—ã–ª“ì–∞–Ω—ã–Ω –±—ñ–ª–≥–µ–Ω –∫“Ø–Ω–Ω–µ–Ω –±–∞—Å—Ç–∞–ø 3 –∂—ã–ª–¥—ã “õ“±—Ä–∞–π–¥—ã."
    }
}

# –ü–æ–ª–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å—É–¥–æ–≤ –¥–ª—è 3 –≥–æ—Ä–æ–¥–æ–≤
courts_db = {
    "–ê—Å—Ç–∞–Ω–∞": {
        "specialized": {
            "—Ñ–∏–∑-—Ñ–∏–∑": {
                "name": "–ú–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π —Å—É–¥ ‚Ññ2",
                "address": "–≥. –ê—Å—Ç–∞–Ω–∞, —É–ª. –ë–µ–π–±–∏—Ç—à–∏–ª–∏–∫, 25",
                "phone": "+7 (7172) 123-456",
                "type": "–ú–°–ì–î",
                "coords": (51.1282, 71.4307)
            },
            "—é—Ä-—é—Ä": {
                "name": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Å—É–¥ –≥. –ê—Å—Ç–∞–Ω—ã",
                "address": "–≥. –ê—Å—Ç–∞–Ω–∞, —É–ª. –ë–æ–∫–µ–π—Ö–∞–Ω–∞, 4",
                "phone": "+7 (7172) 234-567",
                "type": "–°–ú–≠–°",
                "coords": (51.1350, 71.4380)
            },
            "—Ñ–∏–∑-—é—Ä": {
                "name": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Å—É–¥ –≥. –ê—Å—Ç–∞–Ω—ã",
                "address": "–≥. –ê—Å—Ç–∞–Ω–∞, —É–ª. –ë–æ–∫–µ–π—Ö–∞–Ω–∞, 4",
                "phone": "+7 (7172) 234-567",
                "type": "–°–ú–≠–°",
                "coords": (51.1350, 71.4380)
            },
            "—é—Ä-—Ñ–∏–∑": {
                "name": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Å—É–¥ –≥. –ê—Å—Ç–∞–Ω—ã",
                "address": "–≥. –ê—Å—Ç–∞–Ω–∞, —É–ª. –ë–æ–∫–µ–π—Ö–∞–Ω–∞, 4",
                "phone": "+7 (7172) 234-567",
                "type": "–°–ú–≠–°",
                "coords": (51.1350, 71.4380)
            }
        }
    },
    "–ê–ª–º–∞—Ç—ã": {
        "specialized": {
            "—Ñ–∏–∑-—Ñ–∏–∑": {
                "name": "–ú–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π —Å—É–¥ –≥. –ê–ª–º–∞—Ç—ã",
                "address": "–≥. –ê–ª–º–∞—Ç—ã, –ø—Ä. –ê–±–∞—è, 90",
                "phone": "+7 (727) 123-4567",
                "type": "–ú–°–ì–î",
                "coords": (43.2500, 76.9200)
            },
            "—é—Ä-—é—Ä": {
                "name": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Å—É–¥ –≥. –ê–ª–º–∞—Ç—ã",
                "address": "–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –ñ–∞—Ä–æ–∫–æ–≤–∞, 215",
                "phone": "+7 (727) 234-5678",
                "type": "–°–ú–≠–°",
                "coords": (43.2450, 76.9150)
            },
            "—Ñ–∏–∑-—é—Ä": {
                "name": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Å—É–¥ –≥. –ê–ª–º–∞—Ç—ã",
                "address": "–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –ñ–∞—Ä–æ–∫–æ–≤–∞, 215",
                "phone": "+7 (727) 234-5678",
                "type": "–°–ú–≠–°",
                "coords": (43.2450, 76.9150)
            },
            "—é—Ä-—Ñ–∏–∑": {
                "name": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Å—É–¥ –≥. –ê–ª–º–∞—Ç—ã",
                "address": "–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –ñ–∞—Ä–æ–∫–æ–≤–∞, 215",
                "phone": "+7 (727) 234-5678",
                "type": "–°–ú–≠–°",
                "coords": (43.2450, 76.9150)
            }
        }
    },
    "–®—ã–º–∫–µ–Ω—Ç": {
        "specialized": {
            "—Ñ–∏–∑-—Ñ–∏–∑": {
                "name": "–ú–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π —Å—É–¥ –≥. –®—ã–º–∫–µ–Ω—Ç–∞",
                "address": "–≥. –®—ã–º–∫–µ–Ω—Ç, —É–ª. –ñ–µ–ª—Ç–æ–∫—Å–∞–Ω, 28",
                "phone": "+7 (7252) 123-456",
                "type": "–ú–°–ì–î",
                "coords": (42.3180, 69.5900)
            },
            "—é—Ä-—é—Ä": {
                "name": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Å—É–¥ –≥. –®—ã–º–∫–µ–Ω—Ç–∞",
                "address": "–≥. –®—ã–º–∫–µ–Ω—Ç, –ø—Ä. –¢–∞—É–∫–µ —Ö–∞–Ω–∞, 96",
                "phone": "+7 (7252) 234-567",
                "type": "–°–ú–≠–°",
                "coords": (42.3150, 69.6000)
            },
            "—Ñ–∏–∑-—é—Ä": {
                "name": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Å—É–¥ –≥. –®—ã–º–∫–µ–Ω—Ç–∞",
                "address": "–≥. –®—ã–º–∫–µ–Ω—Ç, –ø—Ä. –¢–∞—É–∫–µ —Ö–∞–Ω–∞, 96",
                "phone": "+7 (7252) 234-567",
                "type": "–°–ú–≠–°",
                "coords": (42.3150, 69.6000)
            },
            "—é—Ä-—Ñ–∏–∑": {
                "name": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Å—É–¥ –≥. –®—ã–º–∫–µ–Ω—Ç–∞",
                "address": "–≥. –®—ã–º–∫–µ–Ω—Ç, –ø—Ä. –¢–∞—É–∫–µ —Ö–∞–Ω–∞, 96",
                "phone": "+7 (7252) 234-567",
                "type": "–°–ú–≠–°",
                "coords": (42.3150, 69.6000)
            }
        }
    }
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru")],
        [InlineKeyboardButton("üá∞üáø “ö–∞–∑–∞“õ—à–∞", callback_data="lang_kz")]
    ]
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –°”ô–ª–µ–º!\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def handle_language(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    lang = query.data.split("_")[1]
    user_id = query.from_user.id
    user_context[user_id] = {"lang": lang}

    keyboard = [
        [InlineKeyboardButton("–§–∏–∑. –ª–∏—Ü–æ ‚Üí –§–∏–∑. –ª–∏—Ü–æ", callback_data="case_type_—Ñ–∏–∑-—Ñ–∏–∑")],
        [InlineKeyboardButton("–§–∏–∑. –ª–∏—Ü–æ ‚Üí –Æ—Ä. –ª–∏—Ü–æ", callback_data="case_type_—Ñ–∏–∑-—é—Ä")],
        [InlineKeyboardButton("–Æ—Ä. –ª–∏—Ü–æ ‚Üí –§–∏–∑. –ª–∏—Ü–æ", callback_data="case_type_—é—Ä-—Ñ–∏–∑")],
        [InlineKeyboardButton("–Æ—Ä. –ª–∏—Ü–æ ‚Üí –Æ—Ä. –ª–∏—Ü–æ", callback_data="case_type_—é—Ä-—é—Ä")]
    ]

    text = {
        "ru": "üë®‚Äç‚öñÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–µ–ª–∞ (–∏—Å—Ç–µ—Ü ‚Üí –æ—Ç–≤–µ—Ç—á–∏–∫):",
        "kz": "üë®‚Äç‚öñÔ∏è –Ü—Å—Ç—ñ“£ —Ç“Ø—Ä—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑ (—Ç–∞–ª–∞–ø–∫–µ—Ä ‚Üí –∂–∞—É–∞–ø–∫–µ—Ä):"
    }[lang]

    await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

async def handle_case_type(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    case_type = query.data.split("_")[2]

    if user_id not in user_context:
        user_context[user_id] = {}
    user_context[user_id]["case_type"] = case_type

    lang = user_context[user_id].get("lang", "ru")

    request_text = {
        "ru": "üìç –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–π —Å—É–¥:",
        "kz": "üìç –ï“£ –∂–∞“õ—ã–Ω —Å–æ—Ç—Ç—ã —Ç–∞–±—É “Ø—à—ñ–Ω –æ—Ä–Ω–∞–ª–∞—Å“õ–∞–Ω –∂–µ—Ä—ñ“£—ñ–∑–¥—ñ –∂—ñ–±–µ—Ä—ñ“£—ñ–∑:"
    }[lang]

    location_keyboard = ReplyKeyboardMarkup(
        [[KeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

    try:
        await query.edit_message_text(request_text)
        await context.bot.send_message(
            chat_id=query.message.chat_id,
            text=request_text,
            reply_markup=location_keyboard
        )
    except Exception as e:
        logger.error(f"Error in handle_case_type: {e}")

async def handle_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_id = update.message.from_user.id
        lang = user_context.get(user_id, {}).get("lang", "ru")
        case_type = user_context.get(user_id, {}).get("case_type", "—Ñ–∏–∑-—Ñ–∏–∑")

        location = update.message.location
        user_coords = (location.latitude, location.longitude)

        geolocator = Nominatim(user_agent="court_bot")
        address = geolocator.reverse(user_coords, language='ru')

        city = None
        if address and 'address' in address.raw:
            address_data = address.raw['address']
            city = address_data.get('city') or address_data.get('town')

        # –£—Ç–æ—á–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π –≥–æ—Ä–æ–¥–æ–≤
        if city:
            if "–ê—Å—Ç–∞–Ω–∞" in city or "–ù—É—Ä-–°—É–ª—Ç–∞–Ω" in city:
                city = "–ê—Å—Ç–∞–Ω–∞"
            elif "–ê–ª–º–∞—Ç—ã" in city or "–ê–ª–º–∞—Ç–∞" in city:
                city = "–ê–ª–º–∞—Ç—ã"
            elif "–®—ã–º–∫–µ–Ω—Ç" in city:
                city = "–®—ã–º–∫–µ–Ω—Ç"

        if not city:
            error_text = {
                "ru": "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–æ—Ä–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
                "kz": "‚ùå “ö–∞–ª–∞–Ω—ã –∞–Ω—ã“õ—Ç–∞—É –º“Ø–º–∫—ñ–Ω –±–æ–ª–º–∞–¥—ã. “ö–∞–π—Ç–∞–ª–∞–ø –∫”©—Ä—ñ“£—ñ–∑."
            }[lang]
            await update.message.reply_text(error_text)
            return

        if city in courts_db and case_type in courts_db[city]["specialized"]:
            court = courts_db[city]["specialized"][case_type]
            distance = geopy.distance.distance(user_coords, court['coords']).km

            result_text = {
                "ru": f"üë®‚Äç‚öñÔ∏è <b>{court['type']}: {court['name']}</b>\n\n"
                      f"üìå <b>–ê–¥—Ä–µ—Å:</b> {court['address']}\n"
                      f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {court['phone']}\n"
                      f"üó∫ <b>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</b> {distance:.1f} –∫–º\n\n"
                      f"<i>–¢–∏–ø –¥–µ–ª–∞: {case_type.replace('-', ' ‚Üí ')}</i>",
                "kz": f"üë®‚Äç‚öñÔ∏è <b>{court['type']}: {court['name']}</b>\n\n"
                      f"üìå <b>–ú–µ–∫–µ–Ω-–∂–∞–π:</b> {court['address']}\n"
                      f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {court['phone']}\n"
                      f"üó∫ <b>“ö–∞—à—ã“õ—Ç—ã“õ:</b> {distance:.1f} –∫–º\n\n"
                      f"<i>–Ü—Å—Ç—ñ“£ —Ç“Ø—Ä—ñ: {case_type.replace('-', ' ‚Üí ')}</i>"
            }[lang]

            await update.message.reply_text(result_text, parse_mode="HTML")
        else:
            error_text = {
                "ru": f"‚ùå –î–ª—è —Ç–∏–ø–∞ –¥–µ–ª–∞ '{case_type.replace('-', ' ‚Üí ')}' –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—É–¥ –≤ –≥–æ—Ä–æ–¥–µ {city}",
                "kz": f"‚ùå '{case_type.replace('-', ' ‚Üí ')}' —Ç“Ø—Ä—ñ–Ω–¥–µ–≥—ñ —ñ—Å “Ø—à—ñ–Ω {city} “õ–∞–ª–∞—Å—ã–Ω–¥–∞ —Å–æ—Ç —Ç–∞–±—ã–ª–º–∞–¥—ã"
            }[lang]
            await update.message.reply_text(error_text)

        await send_faq_menu(update.message, lang)

    except Exception as e:
        logger.error(f"Error in handle_location: {e}")
        error_text = {
            "ru": "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è",
            "kz": "‚ùå –û—Ä–Ω–∞–ª–∞—Å“õ–∞–Ω –∂–µ—Ä–¥—ñ ”©“£–¥–µ—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ –ø–∞–π–¥–∞ –±–æ–ª–¥—ã"
        }[user_context.get(user_id, {}).get("lang", "ru")]
        await update.message.reply_text(error_text)

async def send_faq_menu(message, lang):
    try:
        keyboard = [
            [InlineKeyboardButton(faq_questions["q1"][lang], callback_data="faq_q1"),
             InlineKeyboardButton(faq_questions["q2"][lang], callback_data="faq_q2")],
            [InlineKeyboardButton(faq_questions["q3"][lang], callback_data="faq_q3"),
             InlineKeyboardButton(faq_questions["q4"][lang], callback_data="faq_q4")],
            [InlineKeyboardButton(faq_questions["q5"][lang], callback_data="faq_q5"),
             InlineKeyboardButton(faq_questions["q6"][lang], callback_data="faq_q6")],
            [InlineKeyboardButton(faq_questions["q7"][lang], callback_data="faq_q7"),
             InlineKeyboardButton(faq_questions["q8"][lang], callback_data="faq_q8")],
            [InlineKeyboardButton(faq_questions["q9"][lang], callback_data="faq_q9"),
             InlineKeyboardButton(faq_questions["q10"][lang], callback_data="faq_q10")],
            [InlineKeyboardButton(faq_questions["q11"][lang], callback_data="faq_q11"),
             InlineKeyboardButton(faq_questions["q12"][lang], callback_data="faq_q12")],
            [InlineKeyboardButton("üåê –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫" if lang == "ru" else "üåê –¢—ñ–ª–¥—ñ ”©–∑–≥–µ—Ä—Ç—É", callback_data="change_lang")]
        ]
        await message.reply_text(
            "‚ùì –í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:" if lang == "ru" else "‚ùì –°“±—Ä–∞“õ—Ç—ã —Ç–∞“£–¥–∞“£—ã–∑:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    except Exception as e:
        logger.error(f"Error in send_faq_menu: {e}")

async def handle_faq_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        query = update.callback_query
        await query.answer()
        user_id = query.from_user.id
        lang = user_context.get(user_id, {}).get("lang", "ru")
        question_key = query.data.split("_")[1]

        answer = faq_answers.get(question_key, {}).get(lang, "–û—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        await query.edit_message_text(
            f"{faq_questions[question_key][lang]}\n\n{answer}"
        )
    except Exception as e:
        logger.error(f"Error in handle_faq_answer: {e}")

async def handle_change_lang(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        query = update.callback_query
        await query.answer()
        await start(update, context)
    except Exception as e:
        logger.error(f"Error in handle_change_lang: {e}")

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_id = update.message.from_user.id
        lang = user_context.get(user_id, {}).get("lang", "ru")

        if update.message.text in ["üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", "üìç –û—Ä–Ω–∞–ª–∞—Å“õ–∞–Ω –∂–µ—Ä–¥—ñ –∂—ñ–±–µ—Ä—É"]:
            prompt_text = {
                "ru": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è",
                "kz": "–û—Ä–Ω–∞–ª–∞—Å“õ–∞–Ω –∂–µ—Ä–¥—ñ –∂—ñ–±–µ—Ä—É —Ç“Ø–π–º–µ—Å—ñ–Ω –±–∞—Å—ã“£—ã–∑"
            }[lang]
            await update.message.reply_text(prompt_text)
        else:
            await start(update, context)
    except Exception as e:
        logger.error(f"Error in handle_text: {e}")

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_language, pattern="^lang_"))
    app.add_handler(CallbackQueryHandler(handle_case_type, pattern="^case_type_"))
    app.add_handler(CallbackQueryHandler(handle_faq_answer, pattern="^faq_q"))
    app.add_handler(CallbackQueryHandler(handle_change_lang, pattern="^change_lang"))
    app.add_handler(MessageHandler(filters.LOCATION, handle_location))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == '__main__':
    main()